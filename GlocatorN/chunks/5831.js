"use strict";(self.webpackChunkmomraGisCore=self.webpackChunkmomraGisCore||[]).push([[5831,9112],{92557:(e,a,t)=>{t.d(a,{T:()=>r});const r={BingMapsLayer:async()=>(await t.e(1968).then(t.bind(t,31968))).default,BuildingSceneLayer:async()=>(await Promise.all([t.e(5149),t.e(9871)]).then(t.bind(t,59871))).default,CSVLayer:async()=>(await t.e(9849).then(t.bind(t,89849))).default,ElevationLayer:async()=>(await t.e(6871).then(t.bind(t,36871))).default,FeatureLayer:async()=>(await Promise.resolve().then(t.bind(t,77567))).default,GroupLayer:async()=>(await Promise.resolve().then(t.bind(t,56753))).default,GeoRSSLayer:async()=>(await t.e(4417).then(t.bind(t,84417))).default,GeoJSONLayer:async()=>(await t.e(1655).then(t.bind(t,81655))).default,ImageryLayer:async()=>(await Promise.all([t.e(1329),t.e(7594),t.e(6985),t.e(4698)]).then(t.bind(t,34698))).default,ImageryTileLayer:async()=>(await Promise.all([t.e(1329),t.e(8299),t.e(7594),t.e(6985),t.e(4283)]).then(t.bind(t,54283))).default,IntegratedMeshLayer:async()=>(await Promise.all([t.e(5149),t.e(6479)]).then(t.bind(t,96479))).default,KMLLayer:async()=>(await t.e(693).then(t.bind(t,80693))).default,MapImageLayer:async()=>(await Promise.resolve().then(t.bind(t,69420))).default,MapNotesLayer:async()=>(await t.e(8414).then(t.bind(t,78414))).default,OGCFeatureLayer:async()=>(await t.e(3963).then(t.bind(t,53963))).default,OpenStreetMapLayer:async()=>(await t.e(3206).then(t.bind(t,81388))).default,PointCloudLayer:async()=>(await t.e(3108).then(t.bind(t,73108))).default,RouteLayer:async()=>(await t.e(1500).then(t.bind(t,71500))).default,SceneLayer:async()=>(await Promise.all([t.e(5149),t.e(4366)]).then(t.bind(t,74566))).default,StreamLayer:async()=>(await t.e(5609).then(t.bind(t,75609))).default,TileLayer:async()=>(await t.e(5369).then(t.bind(t,75369))).default,UnknownLayer:async()=>(await t.e(81).then(t.bind(t,40081))).default,UnsupportedLayer:async()=>(await t.e(4864).then(t.bind(t,74864))).default,VectorTileLayer:async()=>(await Promise.resolve().then(t.bind(t,16749))).default,VoxelLayer:async()=>(await t.e(1605).then(t.bind(t,1605))).default,WebTileLayer:async()=>(await t.e(9859).then(t.bind(t,89859))).default,WFSLayer:async()=>(await t.e(4420).then(t.bind(t,84420))).default,WMSLayer:async()=>(await t.e(1936).then(t.bind(t,61936))).default,WMTSLayer:async()=>(await t.e(9306).then(t.bind(t,9306))).default}},49112:(e,a,t)=>{t.r(a),t.d(a,{getFirstLayerOrTableId:()=>m,getNumLayersAndTables:()=>f,load:()=>u,preprocessFSItemData:()=>p});var r=t(70375),n=t(92557),l=t(26869),s=t(84513),i=t(16603),o=t(40371);async function u(e,a){const t=e.instance.portalItem;return t&&t.id?(await t.load(a),function(e){const a=e.instance.portalItem;if(-1===e.supportedTypes.indexOf(a.type))throw new r.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a.type,expectedType:e.supportedTypes.join(", ")})}(e),async function(e,a){const t=e.instance,l=t.portalItem,{url:u,title:y}=l,m=(0,s.m)(l);if("group"===t.type)return t.read({title:y},m),function(e,a){let t;const l=e.portalItem.type;switch(l){case"Feature Service":case"Feature Collection":t=n.T.FeatureLayer;break;case"Stream Service":t=n.T.StreamLayer;break;case"Scene Service":t=n.T.SceneLayer;break;default:throw new r.Z("portal:unsupported-item-type-as-group",`The item type '${l}' is not supported as a 'IGroupLayer'`)}let s;return t().then((e=>(s=e,d(a)))).then((async a=>"Feature Service"===l?(a=await p(a,e.portalItem.url),c(e,s,a)):f(a)>0?c(e,s,a):function(e,a){return e.portalItem.url?(0,o.b)(e.portalItem.url).then((t=>{var r,n;function l(e){return{id:e.id,name:e.name}}t&&c(e,a,{layers:null==(r=t.layers)?void 0:r.map(l),tables:null==(n=t.tables)?void 0:n.map(l)})})):Promise.resolve()}(e,s)))}(t,e);u&&t.read({url:u},m);const L=await d(e,a);return L&&t.read(L,m),t.resourceReferences={portalItem:l,paths:m.readResourcePaths},t.read({title:y},m),(0,i.y)(t,m)}(e,a)):Promise.resolve()}function c(e,a,t){let r=t.layers||[];const n=t.tables||[];"Feature Collection"===e.portalItem.type&&(r.forEach((e=>{var a;"Table"===(null==e||null==(a=e.layerDefinition)?void 0:a.type)&&n.push(e)})),r=r.filter((e=>{var a;return"Table"!==(null==e||null==(a=e.layerDefinition)?void 0:a.type)}))),r.reverse().forEach((r=>{const n=y(e,a,t,r);e.add(n)})),n.reverse().forEach((r=>{const n=y(e,a,t,r);e.tables.add(n)}))}function y(e,a,t,r){const n=new a({portalItem:e.portalItem.clone(),layerId:r.id,sublayerTitleMode:"service-name"});if("Feature Collection"===e.portalItem.type){const a={origin:"portal-item",portal:e.portalItem.portal||l.Z.getDefault()};n.read(r,a);const s=t.showLegend;null!=s&&n.read({showLegend:s},a)}return n}function d(e,a){if(!1===e.supportsData)return Promise.resolve(void 0);const t=e.instance;return t.portalItem.fetchData("json",a).catch((()=>null)).then((async e=>{if(function(e){return"stream"!==e.type&&"layerId"in e}(t)){let a,r=!0;return e&&f(e)>0&&(null==t.layerId&&(t.layerId=m(e)),a=function(e,a){const t=e.layers;if(t)for(let e=0;e<t.length;e++)if(t[e].id===a)return t[e];const r=e.tables;if(r)for(let e=0;e<r.length;e++)if(r[e].id===a)return r[e];return null}(e,t.layerId),a&&(1===f(e)&&(r=!1),null!=e.showLegend&&(a.showLegend=e.showLegend))),r&&"service-name"!==t.sublayerTitleMode&&(t.sublayerTitleMode="item-title-and-service-name"),a}return e}))}async function p(e,a){var t,r;if(null==(null==(t=e)?void 0:t.layers)||null==(null==(r=e)?void 0:r.tables)){const t=await(0,o.b)(a);(e=e||{}).layers=e.layers||(null==t?void 0:t.layers),e.tables=e.tables||(null==t?void 0:t.tables)}return e}function m(e){const a=e.layers;if(a&&a.length)return a[0].id;const t=e.tables;return t&&t.length?t[0].id:null}function f(e){var a,t,r,n;return(null!=(a=null==e||null==(t=e.layers)?void 0:t.length)?a:0)+(null!=(r=null==e||null==(n=e.tables)?void 0:n.length)?r:0)}},55831:(e,a,t)=>{t.r(a),t.d(a,{fromItem:()=>u,selectLayerClassPath:()=>c});var r=t(70375),n=t(92557),l=t(53110),s=t(49112),i=t(31370),o=t(40371);function u(e){return!e.portalItem||e.portalItem instanceof l.default||(e={...e,portalItem:new l.default(e.portalItem)}),function(e){return e.load().then(c).then(y)}(e.portalItem).then((a=>{const t={portalItem:e.portalItem,...a.properties},r=a.constructor;return Promise.resolve(new r(t))}))}function c(e){switch(e.type){case"Map Service":return(a=e,(0,o.b)(a.url).then((e=>e.tileInfo))).then((e=>e?{className:"TileLayer"}:{className:"MapImageLayer"}));case"Feature Service":return function(e){return d(e).then((e=>{if("object"==typeof e){const a={};return null!=e.id&&(a.layerId=e.id),{className:"FeatureLayer",properties:a}}return{className:"GroupLayer"}}))}(e);case"Feature Collection":return async function(e){if(await e.load(),(0,i._$)(e,"Map Notes"))return{className:"MapNotesLayer"};if((0,i._$)(e,"Route Layer"))return{className:"RouteLayer"};const a=await e.fetchData();return 1===(0,s.getNumLayersAndTables)(a)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return function(e){return d(e).then((a=>{if("object"==typeof a){const t={};let r;if(null!=a.id?(t.layerId=a.id,r=`${e.url}/layers/${a.id}`):r=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const a={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const t of Object.keys(a))if(-1!==e.typeKeywords.indexOf(t))return{className:a[t]}}return(0,o.b)(r).then((e=>{let a="SceneLayer";const r={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&r[e.layerType]&&(a=r[e.layerType]),{className:a,properties:t}}))}return!1===a?(0,o.b)(e.url).then((e=>"Voxel"===(null==e?void 0:e.layerType)?{className:"VoxelLayer"}:{className:"GroupLayer"})):{className:"GroupLayer"}}))}(e);case"Image Service":return async function(e){var a,t,r;await e.load();const n=null!=(a=null==(t=e.typeKeywords)?void 0:t.map((e=>e.toLowerCase())))?a:[];if(n.indexOf("elevation 3d layer")>-1)return{className:"ElevationLayer"};if(n.indexOf("tiled imagery")>-1)return{className:"ImageryTileLayer"};const l=await e.fetchData(),s=null==l?void 0:l.layerType;return"ArcGISTiledImageServiceLayer"===s?{className:"ImageryTileLayer"}:"ArcGISImageServiceLayer"===s?{className:"ImageryLayer"}:"map"===(null==(r=(await(0,o.b)(e.url)).cacheType)?void 0:r.toLowerCase())?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:return Promise.reject(new r.Z("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}var a}function y(e){return(0,n.T[e.className])().then((a=>({constructor:a,properties:e.properties})))}function d(e){return!e.url||e.url.match(/\/\d+$/)?Promise.resolve({}):e.load().then((()=>e.fetchData())).then((async a=>"Feature Service"===e.type?p(a=await(0,s.preprocessFSItemData)(a,e.url)):(0,s.getNumLayersAndTables)(a)>0?p(a):(0,o.b)(e.url).then(p)))}function p(e){return 1===(0,s.getNumLayersAndTables)(e)&&{id:(0,s.getFirstLayerOrTableId)(e)}}},40371:(e,a,t)=>{t.d(a,{b:()=>n});var r=t(66341);async function n(e){const{data:a}=await(0,r.default)(e,{responseType:"json",query:{f:"json"}});return a}}}]);
//# sourceMappingURL=5831.js.map