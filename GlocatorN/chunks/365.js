"use strict";(self.webpackChunkmomraGisCore=self.webpackChunkmomraGisCore||[]).push([[365],{48420:(e,t,r)=>{r.d(t,{E:()=>i});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const i="boolean"!=typeof s&&s.name?s.name:e,o="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=o&&(r[i]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function i(e){return new s(e)}},76058:(e,t,r)=>{r.d(t,{et:()=>k,ef:()=>U,bI:()=>I,mT:()=>D,Wf:()=>J});var s=r(66341),i=r(70375),o=r(61681),n=r(86745),a=r(3466),l=r(84238),p=r(36663),u=r(49004),c=r(81977),d=(r(7753),r(39994),r(7283),r(40266)),y=r(67134),m=r(79438),f=r(25709);const h=(0,f.wY)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"}),v=((0,f.wY)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),(0,f.wY)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),(0,f.wY)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),(0,f.wY)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,f.wY)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),g=((0,f.wY)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,f.wY)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,f.wY)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}));var b;let T=b=class extends u.wq{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new b((0,y.d9)({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};(0,p._)([(0,c.Cb)({type:[Object],json:{write:!0}})],T.prototype,"attributeParameterValues",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"description",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"distanceAttributeName",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"id",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"impedanceAttributeName",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"name",void 0),(0,p._)([(0,c.Cb)({type:[String],json:{write:!0}})],T.prototype,"restrictionAttributeNames",void 0),(0,p._)([(0,c.Cb)({type:Number,json:{write:!0}})],T.prototype,"simplificationTolerance",void 0),(0,p._)([(0,m.J)(h)],T.prototype,"simplificationToleranceUnits",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"timeAttributeName",void 0),(0,p._)([(0,m.J)(g)],T.prototype,"type",void 0),(0,p._)([(0,c.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"useHierarchy",void 0),(0,p._)([(0,m.J)(v)],T.prototype,"uturnAtJunctions",void 0),T=b=(0,p._)([(0,d.j)("esri.rest.support.TravelMode")],T);const N=T;let _=class extends u.wq{constructor(e){super(e),this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};(0,p._)([(0,c.Cb)()],_.prototype,"currentVersion",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"defaultTravelMode",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"directionsLanguage",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"directionsSupportedLanguages",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"directionsTimeAttribute",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"hasZ",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"impedance",void 0),(0,p._)([(0,c.Cb)()],_.prototype,"networkDataset",void 0),(0,p._)([(0,c.Cb)({type:[N]})],_.prototype,"supportedTravelModes",void 0),_=(0,p._)([(0,d.j)("esri.rest.support.NetworkServiceDescription")],_);const w=_;var A=r(80085),C=r(34248),B=r(51211),M=r(89956),S=r(71343);let j=class extends u.wq{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,p._)([(0,c.Cb)({type:S.Z,json:{write:!0}})],j.prototype,"directions",void 0),(0,p._)([(0,c.Cb)({type:A.Z,json:{write:!0}})],j.prototype,"route",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],j.prototype,"routeName",void 0),(0,p._)([(0,c.Cb)({type:[A.Z],json:{write:!0}})],j.prototype,"stops",void 0),j=(0,p._)([(0,d.j)("esri.rest.support.RouteResult")],j);const O=j;function Z(e){return e&&B.default.fromJSON(e).features.map((e=>e))}let R=class extends u.wq{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return Z(t.barriers||t.pointBarriers)}readPolylineBarriers(e){return Z(e)}readPolygonBarriers(e){return Z(e)}};(0,p._)([(0,c.Cb)({aliasOf:"pointBarriers"})],R.prototype,"barriers",void 0),(0,p._)([(0,c.Cb)({type:[M.Z]})],R.prototype,"messages",void 0),(0,p._)([(0,c.Cb)({type:[A.Z]})],R.prototype,"pointBarriers",void 0),(0,p._)([(0,C.r)("pointBarriers",["barriers","pointBarriers"])],R.prototype,"readPointBarriers",null),(0,p._)([(0,c.Cb)({type:[A.Z]})],R.prototype,"polylineBarriers",void 0),(0,p._)([(0,C.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,p._)([(0,c.Cb)({type:[A.Z]})],R.prototype,"polygonBarriers",void 0),(0,p._)([(0,C.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,p._)([(0,c.Cb)({type:[O]})],R.prototype,"routeResults",void 0),R=(0,p._)([(0,d.j)("esri.rest.support.RouteResultsContainer")],R);const P=R;function k(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function U(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function D(e){const t=[],r=[],{directions:s=[],routes:{features:i=[],spatialReference:n=null}={},stops:{features:a=[],spatialReference:l=null}={},barriers:p,polygonBarriers:u,polylineBarriers:c,messages:d}=e.data,y="esri.tasks.RouteTask.NULL_ROUTE_NAME";let m,f,h=!0;const v=i&&n||a&&l||p&&p.spatialReference||u&&u.spatialReference||c&&c.spatialReference;s.forEach((e=>{t.push(m=e.routeName),r[m]={directions:e}})),i.forEach((e=>{-1===t.indexOf(m=e.attributes.Name)&&(t.push(m),r[m]={}),(0,o.pC)(e.geometry)&&(e.geometry.spatialReference=v),r[m].route=e})),a.forEach((e=>{f=e.attributes,-1===t.indexOf(m=f.RouteName||y)&&(t.push(m),r[m]={}),m!==y&&(h=!1),(0,o.pC)(e.geometry)&&(e.geometry.spatialReference=v),null==r[m].stops&&(r[m].stops=[]),r[m].stops.push(e)})),a.length>0&&!0===h&&(r[t[0]].stops=r[y].stops,delete r[y],t.splice(t.indexOf(y),1));const g=t.map((e=>(r[e].routeName=e===y?null:e,r[e])));return P.fromJSON({routeResults:g,pointBarriers:p,polygonBarriers:u,polylineBarriers:c,messages:d})}function J(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,o.pC)(e)&&e.hasZ)return!0}return!1}async function I(e,t,r){if(!e)throw new i.Z("network-service:missing-url","Url to Network service is missing");const o=(0,l.lA)({f:"json",token:t},r),{data:p}=await(0,s.default)(e,o);p.supportedTravelModes||(p.supportedTravelModes=[]);for(let e=0;e<p.supportedTravelModes.length;e++)p.supportedTravelModes[e].id||(p.supportedTravelModes[e].id=p.supportedTravelModes[e].itemId);const u=p.currentVersion>=10.4?async function(e,t,r){try{const i=(0,l.lA)({f:"json",token:t},r),o=(0,a.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:p}}=await(0,s.default)(o,i);return{supportedTravelModes:n,defaultTravelMode:p}}catch(e){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,r):async function(e,t){var r,i;const o=(0,l.lA)({f:"json"},t),{data:p}=await(0,s.default)(e.replace(/\/rest\/.*$/i,"/info"),o);if(!p||!p.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:u}=p,c=(0,a.Qj)(u)+"/sharing/rest/portals/self",{data:d}=await(0,s.default)(c,o),y=(0,n.hS)("helperServices.routingUtilities.url",d);if(!y)return{supportedTravelModes:[],defaultTravelMode:null};const m=(0,l.en)(u),f=/\/solve$/i.test(m.path)?"Route":/\/solveclosestfacility$/i.test(m.path)?"ClosestFacility":"ServiceAreas",h=(0,l.lA)({f:"json",serviceName:f},t),v=(0,a.Qj)(y)+"/GetTravelModes/execute",g=await(0,s.default)(v,h),b=[];let T=null;if(null!=g&&null!=(r=g.data)&&null!=(i=r.results)&&i.length){const e=g.data.results;for(const t of e){var N;if("supportedTravelModes"===t.paramName){if(null!=(N=t.value)&&N.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);b.push(t)}}else"defaultTravelMode"===t.paramName&&(T=t.value)}}return{supportedTravelModes:b,defaultTravelMode:T}}(e,r),{defaultTravelMode:c,supportedTravelModes:d}=await u;return p.defaultTravelMode=c,p.supportedTravelModes=d,w.fromJSON(p)}},71343:(e,t,r)=>{r.d(t,{Z:()=>v});var s=r(36663),i=(r(91957),r(61681)),o=r(81977),n=(r(7753),r(39994),r(7283),r(34248)),a=r(40266),l=r(80085);let p=class extends l.Z{};(0,s._)([(0,o.Cb)()],p.prototype,"events",void 0),(0,s._)([(0,o.Cb)()],p.prototype,"strings",void 0),p=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeature")],p);const u=p;var c=r(51211),d=r(91772),y=r(14685),m=r(90819),f=r(53446);let h=class extends c.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){var r;if(!e)return[];const s=null!=(r=t.summary.envelope.spatialReference)?r:t.spatialReference,i=s&&y.Z.fromJSON(s);return e.map((e=>{var t,r;const s=this._decompressGeometry(e.compressedGeometry),o=new m.Z({...s,spatialReference:i}),n=null!=(t=null==(r=e.events)?void 0:r.map((e=>{const{arriveTimeUTC:t,ETA:r,point:{x:s,y:o,z:n},strings:a}=e;return new u({geometry:new f.Z({x:s,y:o,z:n,hasZ:void 0!==n,spatialReference:i}),attributes:{ETA:r,arriveTimeUTC:t},strings:a})})))?t:[];return new u({attributes:e.attributes,events:n,geometry:o,strings:e.strings})}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,i.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressGeometry(e){let t=0,r=0,s=0,i=0;const o=[];let n,a,l,p,u,c,d,y,m=0,f=0,h=0;if(u=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),u||(u=[]),0===parseInt(u[m],32)){m=2;const e=parseInt(u[m],32);m++,c=parseInt(u[m],32),m++,1&e&&(f=u.indexOf("|")+1,d=parseInt(u[f],32),f++),2&e&&(h=u.indexOf("|",f)+1,y=parseInt(u[h],32),h++)}else c=parseInt(u[m],32),m++;for(;m<u.length&&"|"!==u[m];){n=parseInt(u[m],32)+t,m++,t=n,a=parseInt(u[m],32)+r,m++,r=a;const e=[n/c,a/c];f&&(p=parseInt(u[f],32)+s,f++,s=p,e.push(p/d)),h&&(l=parseInt(u[h],32)+i,h++,i=l,e.push(l/y)),o.push(e)}return{paths:[o],hasZ:f>0,hasM:h>0}}_mergePolylinesToSinglePath(e,t){if(0===e.length)return new m.Z({spatialReference:t});const r=[];for(const t of e)for(const e of t.paths)r.push(...e);const s=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||s.push(e)}));const{hasM:i,hasZ:o}=e[0];return new m.Z({hasM:i,hasZ:o,paths:[s],spatialReference:t})}};(0,s._)([(0,o.Cb)({type:d.Z,json:{read:{source:"summary.envelope"}}})],h.prototype,"extent",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"features",void 0),(0,s._)([(0,n.r)("features")],h.prototype,"readFeatures",null),(0,s._)([(0,o.Cb)()],h.prototype,"geometryType",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"mergedGeometry",null),(0,s._)([(0,o.Cb)()],h.prototype,"routeId",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"routeName",void 0),(0,s._)([(0,o.Cb)({value:null,readOnly:!0})],h.prototype,"strings",null),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],h.prototype,"totalDriveTime",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalLength"}}})],h.prototype,"totalLength",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalTime"}}})],h.prototype,"totalTime",void 0),h=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeatureSet")],h);const v=h},8050:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(36663),i=r(25709),o=r(49004),n=r(81977),a=(r(7753),r(39994),r(7283),r(40266));const l=new i.Xn({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let p=class extends o.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,s._)([(0,n.Cb)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,s._)([(0,n.Cb)({type:String,json:{read:l.read,write:l.write}})],p.prototype,"type",void 0),p=(0,s._)([(0,a.j)("esri.rest.support.GPMessage")],p);const u=p},89956:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(36663),i=r(25709),o=r(81977),n=(r(7753),r(39994),r(7283),r(40266)),a=r(8050);const l=new i.Xn({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let p=class extends a.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],p.prototype,"type",void 0),p=(0,s._)([(0,n.j)("esri.rest.support.NAMessage")],p);const u=p},90365:(e,t,r)=>{r.r(t),r.d(t,{default:()=>S});var s=r(36663),i=r(81977),o=(r(7753),r(39994),r(7283),r(40266)),n=r(66341),a=r(48420),l=r(56247),p=r(76058),u=r(84238),c=(r(91957),r(80085)),d=r(49004),y=r(61681),m=r(34248),f=r(14685),h=r(71343),v=r(51211),g=r(89956),b=r(53446),T=r(90819),N=r(89542);function _(e){return v.default.fromJSON(e).features.map((e=>e.geometry))}let w=class extends d.wq{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return _(e)}readIncidents(e){return _(e)}readPointBarriers(e,t){return _(t.barriers)}readPolylineBarriers(e){return _(e)}readPolygonBarriers(e){return _(e)}readRoutes(e){return function(e){return e.features.map((t=>{const r=f.Z.fromJSON(e.spatialReference),s=c.Z.fromJSON(t);return(0,y.pC)(s.geometry)&&(s.geometry.spatialReference=r),s}))}(e)}};(0,s._)([(0,i.Cb)({type:[h.Z]})],w.prototype,"directions",void 0),(0,s._)([(0,i.Cb)({type:[b.Z]})],w.prototype,"facilities",void 0),(0,s._)([(0,m.r)("facilities")],w.prototype,"readFacilities",null),(0,s._)([(0,i.Cb)({type:[b.Z]})],w.prototype,"incidents",void 0),(0,s._)([(0,m.r)("incidents")],w.prototype,"readIncidents",null),(0,s._)([(0,i.Cb)({type:[g.Z]})],w.prototype,"messages",void 0),(0,s._)([(0,i.Cb)({type:[b.Z]})],w.prototype,"pointBarriers",void 0),(0,s._)([(0,m.r)("pointBarriers",["barriers"])],w.prototype,"readPointBarriers",null),(0,s._)([(0,i.Cb)({type:[T.Z]})],w.prototype,"polylineBarriers",void 0),(0,s._)([(0,m.r)("polylineBarriers")],w.prototype,"readPolylineBarriers",null),(0,s._)([(0,i.Cb)({type:[N.Z]})],w.prototype,"polygonBarriers",void 0),(0,s._)([(0,m.r)("polygonBarriers")],w.prototype,"readPolygonBarriers",null),(0,s._)([(0,i.Cb)({type:[c.Z]})],w.prototype,"routes",void 0),(0,s._)([(0,m.r)("routes")],w.prototype,"readRoutes",null),w=(0,s._)([(0,o.j)("esri.rest.support.ClosestFacilitySolveResult")],w);const A=w,C=(0,a.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});var B=r(42964);let M=class extends B.Z{constructor(e){super(e),this.url=null}solve(e,t){return async function(e,t,r){const s=[],i=[],o={},a={},c=(0,u.en)(e),{path:d}=c;t.incidents&&t.incidents.features&&(0,p.et)(t.incidents.features,i,"incidents.features",o),t.facilities&&t.facilities.features&&(0,p.et)(t.facilities.features,i,"facilities.features",o),t.pointBarriers&&t.pointBarriers.features&&(0,p.et)(t.pointBarriers.features,i,"pointBarriers.features",o),t.polylineBarriers&&t.polylineBarriers.features&&(0,p.et)(t.polylineBarriers.features,i,"polylineBarriers.features",o),t.polygonBarriers&&t.polygonBarriers.features&&(0,p.et)(t.polygonBarriers.features,i,"polygonBarriers.features",o);const y=await(0,l.aX)(i);for(const e in o){const t=o[e];s.push(e),a[e]=y.slice(t[0],t[1])}if((0,p.Wf)(a,s)){let e=null;try{e=await(0,p.bI)(d,t.apiKey,r)}catch{}e&&!e.hasZ&&(0,p.ef)(a,s)}for(const e in a)a[e].forEach(((r,s)=>{t.get(e)[s].geometry=r}));const m={...r,query:{...c.query,...C.toQueryParams(t),f:"json"}},{data:f}=await(0,n.default)(`${d}/solveClosestFacility`,m);return A.fromJSON(f)}(this.url,e,t)}};(0,s._)([(0,i.Cb)()],M.prototype,"url",void 0),M=(0,s._)([(0,o.j)("esri.tasks.ClosestFacilityTask")],M);const S=M}}]);
//# sourceMappingURL=365.js.map