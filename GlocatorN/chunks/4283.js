"use strict";(self.webpackChunkmomraGisCore=self.webpackChunkmomraGisCore||[]).push([[4283],{54283:(e,t,i)=>{i.r(t),i.d(t,{default:()=>je});var n=i(36663),r=i(80020),s=i(63742),a=i(70375),o=i(61681),l=i(15842),c=i(78668),u=i(81977),f=(i(7753),i(39994),i(7283)),h=i(79438),d=i(34248),m=i(40266),p=i(76136),y=i(27668),g=i(63989),x=(i(91957),i(66341)),v=i(13802),I=i(42730),w=i(35925),b=i(20692),C=i(51599),_=i(59510),T=i(29410),S=i(81590),R=i(7928),k=i(23872),M=i(32498),P=i(88243),F=i(91772),O=i(14685);const B=v.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),D=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",(0,b.Nm)(e,B))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,o.Wi)(e))return null;const i=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:n},t):(0,R.KC)(e,n)}async createStreamlinesMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createStreamlinesMesh(e,t):(0,P.z_)(e.rendererSettings,e.flowData,(0,o.pC)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if((0,o.Wi)(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,o.Wi)(i)&&i.length||(i=this._getDefaultSlice());const n=e.timeExtent||this.timeExtent;if((0,o.pC)(i)&&(0,o.pC)(n)&&((0,o.pC)(n.start)||(0,o.pC)(n.end))){var r,s;i=i.map((e=>e.clone()));const a=null==(r=t.variables.find((({name:e})=>e===i[0].variableName)))||null==(s=r.dimensions)?void 0:s.find((({name:e})=>"StdTime"===e)),l=i.find((({dimensionName:e})=>"StdTime"===e));if(!a||!l)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=n,f=(0,o.Wi)(c)?null:c.getTime(),h=(0,o.Wi)(u)?null:u.getTime(),d=null!=f?f:h,m=null!=h?h:f;if((0,o.pC)(a.values)){const e=a.values.filter((e=>{if(Array.isArray(e)){if(d===m)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<m&&e[1]>=m,i=e[0]>=d&&e[1]<=m||e[0]<d&&e[1]>m;return t||i}return d===m?e===d:e>=d&&e<=m}));if(e.length){const t=e.sort(((e,t)=>{var i,n,r,s;return d===m?(null!=(r=e[0])?r:e)-(null!=(s=t[0])?s:t):Math.abs((null!=(i=e[1])?i:e)-m)-Math.abs((null!=(n=t[1])?n:t)-m)}))[0];l.values=[t]}else i=null}else if(a.hasRegularIntervals&&a.extent){const[e,t]=a.extent;d>t||m<e?i=null:l.values=d===m?[d]:[Math.max(e,d),Math.min(t,m)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,k.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!((0,o.pC)(i)&&i.pixels&&i.pixels.length>0))return null;let n;await this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:s}=this;return n=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||(0,o.Wi)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=(0,w.C5)(e);return S.Z.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const r=this.getTileUrl(e,t,i);return(0,x.default)(r,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}if((0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,o.Wi)(n.multidimensionalDefinition))){const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n={}){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,o.Wi)(n.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,n))}async identify(e,t={}){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(t=this.normalizeRasterFetchOptions(t),(0,o.Wi)(t.multidimensionalDefinition))?{location:e,value:null}:this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!(0,o.pC)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new T.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,k.In)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_getDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(!(0,o.pC)(e))return null;const t=e.variables[0];return t.dimensions.map((e=>{var i,n;return new _.Z({variableName:t.name,dimensionName:e.name,values:[null!=(i=null==(n=e.values)?void 0:n[0])?i:e.extent[0]],isSlice:!0})}))}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=(0,k.YD)(e)),this.renderer||(this.renderer=(0,k.Ob)(e,{bandIds:this.bandIds,variableName:(0,o.pC)(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=(0,k.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new M.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const i=this.symbolizer.bind();i.success||B.warn("imagery-tile-mixin",i.error||"The given renderer is not supported by the layer.")}};return(0,n._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"copyright",void 0),(0,n._)([(0,u.Cb)({type:F.Z}),(0,I.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)({type:[_.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,I.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({type:O.Z}),(0,I.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,n._)([(0,u.Cb)({type:S.Z}),(0,I.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,n._)([(0,u.Cb)(C.HQ)],t.prototype,"url",null),(0,n._)([(0,u.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,n._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),t=(0,n._)([(0,m.j)("esri.layers.ImageryTileMixin")],t),t};var z=i(43330),E=i(18241),H=i(12478),Z=i(95874),A=i(2030),N=i(12512),J=i(73556),L=i(84573),W=i(71429),q=i(20613),j=i(49004),U=i(64189),G=i(45389),$=i(11931),V=i(31329),X=i(18486),Y=i(53446);let K=class extends((0,U.v)(j.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,X.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:S.Z.create(),...e.ioConfig}}),e}set url(e){this._set("url",(0,b.Nm)(e,v.Z.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(s,r.size[0],r.size[1],n)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:r}=t;let s=(0,X.nF)(e,i,r);if(!n.intersects(s))return{location:s,value:null};if((0,o.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution)a=(0,X.kr)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:f,colOffset:h}=l,d=(0,G.Rq)(this.url,t.sliceId),m=`${a}/${c}/${u}`;let p=(0,G.Qg)(d,null,m);(0,o.Wi)(p)&&(p=this.fetchRawTile(a,c,u,t),(0,G.gX)(d,null,m,p));const y=await p;if((0,o.Wi)(y)||!y.pixels||0===y.pixels.length)return{location:s,value:null};const g=f*this.rasterInfo.storageInfo.blockHeight+h,x=!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,v=this.rasterInfo.dataType;return("vector-magdir"===v||"vector-uv"===v)&&(null==x?void 0:x.length)>1?{location:s,value:x,magdirValue:"vector-magdir"===v?[x[0],x[1]]:(0,R.Tg)([x[0],x[1]]),pyramidLevel:a}:{location:s,value:x,pyramidLevel:a}}async fetchPixels(e,t,i,n={}){e=(0,X.kZ)(e);const r=(0,X.ut)(e.spatialReference),s=(0,X.Hq)(e),a=(0,X.ut)(this.rasterInfo.spatialReference),l=(0,o.pC)(a)&&this.rasterInfo.extent.width>=a/2;if(n=this._getRequestOptionsWithSliceId(n),(0,o.Wi)(r)||0===s||1===s&&l)return this._fetchPixels(e,t,i,n);if(s>=3)return{extent:e,pixelBlock:null};const c=[],{xmin:u,xmax:f}=e,h=Math.round(r/(f-u)*t),d=h-Math.round((r/2-u)/(f-u)*t);let m=0;const p=[];for(let a=0;a<=s;a++){const o=new F.Z({xmin:0===a?u:-r/2,xmax:a===s?f-r*a:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),l=0===a?h-d:a===s?t-m:h;m+=l,p.push(l);const y=this._fetchPixels(o,l,i,n);c.push(y)}const y=(await Promise.all(c)).map((e=>null==e?void 0:e.pixelBlock));let g=null;const x={width:t,height:i};return g=this.rasterJobHandler?await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:y,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:p},n):(0,V.us)(y,x,{blockWidths:p}),{extent:e,srcExtent:(0,X.tB)(e,this.rasterInfo.spatialReference,n.datumTransformation),pixelBlock:g}}async fetchRawPixels(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:f,height:h,wrapCount:d}=i;const m=(0,o.Wg)(this._getRasterTileAlignmentInfo(e,0));n.buffer&&(c-=n.buffer.cols,u-=n.buffer.rows,f+=2*n.buffer.cols,h+=2*n.buffer.rows);const p=Math.floor(c/a),y=Math.floor(u/l),g=Math.floor((c+f-1)/a),x=Math.floor((u+h-1)/l),v=s[e];if(!v)return null;const{minRow:I,minCol:w,maxCol:b,maxRow:C}=v;if(0===d&&(x<I||g<w||y>C||p>b))return null;const _=new Array;let T=!1;const S=null==this.ioConfig.allowPartialFill?n.allowPartialFill:this.ioConfig.allowPartialFill;for(let t=y;t<=x;t++)for(let i=p;i<=g;i++){const r=0===d||null==m||i<m.worldColumnCountFromOrigin?i:i%m.worldColumnCountFromOrigin-m.originColumnOffset;if(t>=I&&r>=w&&C>=t&&b>=r){const i=this._fetchRawTile(e,t,r,n);S?_.push(new Promise((e=>{i.then((t=>e(t))).catch((()=>{T=!0,e(null)}))}))):_.push(i)}else _.push(null)}if(0===_.length)return null;const R=await Promise.all(_),k={height:(x-y+1)*l,width:(g-p+1)*a},{spatialReference:M}=this.rasterInfo,P=this.getPyramidPixelSize(e),{x:O,y:B}=P;return{extent:new F.Z({xmin:r.x+p*a*O,xmax:r.x+(g+1)*a*O,ymin:r.y-(x+1)*l*B,ymax:r.y-y*l*B,spatialReference:M}),pixelBlocks:R,mosaicSize:k,isPartiallyFilled:T}}fetchRawTile(e,t,i,n){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,X.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,$.Jx)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var n,r;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;i=null!=(n=null!=(r=i)?r:t.retryCount)?n:this.ioConfig.retryCount;const c=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,x.default)(e,{...t,query:{...o,...s},headers:{...l,...c}})}catch(n){if(i>0)return i--,this.request(e,t,i);throw n}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,o.pC)(t))return null;if(!(0,o.pC)(e)||0===e.length)return null;let i=0;const n=e[0].variableName;for(let r=0;r<t.variables.length;r++){const s=t.variables[r],a=s.dimensions;if(s.name!==n){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const n=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==n)return null;const r=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],s=this._getIndexFromDimensions(r,a[t]);if(-1===s)return null;o.shift(),i+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return i}getTileExtentFromTileInfo(e,t,i,n){const r=n.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,n.origin,n.spatialReference,n.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const r=[],s=e.maximumPyramidLevel||0;let a=Math.max(n.x,n.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)r.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new Y.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new S.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,n){const{width:r,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new Y.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(r,s))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],n);e.storageInfo=new q.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,n,r,s=0,a=2){if(1===r.length&&s>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<s;i++)e*=a,t*=a,r.push({x:e,y:t})}const o=[],{x:l,y:c}=n;for(let n=0;n<r.length;n++){const{x:s,y:a}=r[n];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((c-e.ymax+.1*a)/i/a),maxRow:Math.floor((c-e.ymin-.1*a)/i/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.pC)(i)&&i.length)return i[e-1];const r=n**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i){const{spatialReference:n,nativeExtent:r}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,c=(0,X.nF)(e,n,i);if(!r.intersects(c))return null;if(t<0||t>o)return null;const u=this.getPyramidPixelSize(t),{x:f,y:h}=u,d=(l.y-c.y)/h/a,m=(c.x-l.x)/f/s,p=Math.min(a-1,Math.floor((d-Math.floor(d))*a)),y=Math.min(s-1,Math.floor((m-Math.floor(m))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(m),rowOffset:p,colOffset:y,srcLocation:c}}getTileExtent(e,t,i,n,r,s){const[a,o]=s,l=n.x+i*a*e.x,c=l+a*e.x,u=n.y-t*o*e.y,f=u-o*e.y;return new F.Z({xmin:l,xmax:c,ymin:f,ymax:u,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}async _fetchPixels(e,t,i,n={}){let r=(0,X.Hq)(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,n),{pyramidLevel:a,pyramidResolution:l,srcResolution:c,srcExtent:u,srcWidth:f,srcHeight:h}=s;if(0===f||0===h)return{extent:e,srcExtent:u,pixelBlock:null};const d=(0,o.Wg)(this.rasterInfo.transform);"gcs-shift"===(null==d?void 0:d.type)&&(r=(0,X.Hq)(s.srcExtent,!0));const m=this.rasterInfo.storageInfo,p={x:Math.floor((u.xmin-m.origin.x)/l.x+.1),y:Math.floor((m.origin.y-u.ymax)/l.y+.1)},y=await this.fetchRawPixels(a,p,{width:f,height:h,wrapCount:r},n);if(!y)return{extent:e,srcExtent:u,pixelBlock:null};const g=a>0?m.pyramidBlockWidth:m.blockWidth,x=a>0?m.pyramidBlockHeight:m.blockHeight,v=g===f&&x===h&&p.x%g==0&&p.y%x==0,I=new Y.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),w=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:b}=n;if(!w&&v&&1===y.pixelBlocks.length&&g===t&&x===i&&c.x===I.x&&c.y===I.y)return{extent:e,srcExtent:u,pixelBlock:y.pixelBlocks[0]};const C=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:I.toJSON(),datumTransformation:b,rasterTransform:d,hasWrapAround:r>0,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy},n):(0,X.Qp)({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:I,datumTransformation:b,rasterTransform:d,hasWrapAround:r>0,isAdaptive:!1});let _;const T=!n.requestRawData,S={rows:C.spacing[0],cols:C.spacing[1]},R=(0,o.Wg)(this._getRasterTileAlignmentInfo(a,y.extent.xmin)),{pixelBlocks:k,mosaicSize:M,isPartiallyFilled:P}=y;if(this.rasterJobHandler)_=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:k,srcMosaicSize:M,destDimension:T?{width:t,height:i}:null,coefs:T?C.coefficients:null,sampleSpacing:T?S:null,interpolation:n.interpolation,alignmentInfo:R,blockWidths:null},n);else{const e=(0,V.us)(k,M,{alignmentInfo:R});_=T?(0,V.Uk)(e,{width:t,height:i},C.coefficients,S,n.interpolation):e}return n.requestRawData?{srcExtent:u,pixelBlock:_,transformGrid:C,extent:e,isPartiallyFilled:P}:{srcExtent:u,extent:e,pixelBlock:_}}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:l,maxRow:u}=r;if(t<s||i<a||t>u||i>l)return Promise.resolve(null);const f=(0,G.Rq)(this.url,n.sliceId),h=`${e}/${t}/${i}`;let d=(0,G.Qg)(f,n.registryId,h);if((0,o.Wi)(d)){const r=new AbortController;d=this.fetchRawTile(e,t,i,{...n,signal:r.signal}),(0,G.gX)(f,n.registryId,h,d,r),d.catch((()=>(0,G.Gc)(f,n.registryId,h)))}return n.signal&&(0,c.fu)(n,(()=>{(0,G.OE)(f,n.registryId,h)})),d}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:r,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===r){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/n);break;case"minutes":o=Math.round((e-a)/6e4/n);break;case"hours":o=Math.round((e-a)/36e5/n);break;case"days":o=Math.round((e-a)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/n)}return o}return Math.round((e-a)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:r}=e;let s=(null==r?void 0:r.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/i);break;case"hours":s=Math.round((t[1]-t[0])/36e5/i);break;case"days":s=Math.round((t[1]-t[0])/864e5/i);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return s}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,X.P_)(this.rasterInfo)),(0,o.pC)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}_getSourceDataInfo(e,t,i,n={}){const r={datumTransformation:n.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};n.srcResolution&&(r.srcResolution=n.srcResolution,this._updateSourceDataInfo(e,r));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=r,c=a/t,u=o/i,f=l<s&&c*u>=16;if(f||l===s&&(c>8||u>8)||0===a||0===o){const a=new Y.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,X.VO)(a,this.rasterInfo.spatialReference,e,r.datumTransformation);const h=!o||n.srcResolution&&o.x+o.y<n.srcResolution.x+n.srcResolution.y;if(f&&n.srcResolution&&h){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:n.srcResolution.x*t,y:n.srcResolution.y*t}}}o&&(r.srcResolution=o,this._updateSourceDataInfo(e,r))}return(r.srcWidth/t>8||r.srcHeight/i>8)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:n,datumTransformation:r}=t,{pyramidLevel:s,pyramidResolution:a,excessiveReading:l}=(0,X.kr)(n,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,X.tB)(e,i,r);if(null==c)return;const u=(0,o.Wg)(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/a.x-.1),h=Math.ceil((c.ymax-c.ymin)/a.y-.1);t.pyramidLevel=s,t.pyramidResolution=a,t.srcWidth=f,t.srcHeight=h}_getRequestOptionsWithSliceId(e){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}};(0,n._)([(0,u.Cb)()],K.prototype,"_rasterTileAlighmentInfo",void 0),(0,n._)([(0,u.Cb)(C.HQ)],K.prototype,"url",null),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],K.prototype,"datasetName",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],K.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],K.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)()],K.prototype,"sourceJSON",void 0),K=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.BaseRaster")],K);const Q=K;var ee=i(30979);function te(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}class ie{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,ee.f)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ee.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=s}}return{header:a,fields:l,records:c,recordSet:te({fields:l,records:c})}}}var ne=i(78586),re=i(51211);const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");let ae=class extends Q{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(r<0)return null;const s=this._buildCacheFilePath(r,t,i,n.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,a);if(0===c.recordSize)return null;const u=await this.request(s,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,f=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,m=new O.Z(null!=h&&h.wkid||null!=h&&h.wkt?h:d);let p=new F.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const y=new Y.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),g=Math.round((p.xmax-p.xmin)/y.x),x=Math.round((p.ymax-p.ymin)/y.y),v=this._parseTransform(e.geodataXform),I=v?p:null;v&&(p=v.forwardTransform(p),y.x=(p.xmax-p.xmin)/g,y.y=(p.ymax-p.ymin)/x);const w=null!=(i=e.properties)?i:{},b=e.format.toLowerCase().replace("cache/",""),C=new Y.Z(e.origin.x,e.origin.y,m);let _,T,R,k;if(a&&a.colors)for(_=[],T=0;T<a.colors.length;T++)R=a.colors[T],k=a.values?a.values[T]:T,_.push([k,255&R,R<<16>>>24,R<<8>>>24,R>>>24]);const M=e.LODInfos,P=[];for(T=0;T<M.levels.length;T++)P.push({level:M.levels[T],resolution:M.resolutions[T],scale:96/.0254*M.resolutions[T]});const B=new S.Z({dpi:96,lods:P,format:b,origin:C,size:[o,l],spatialReference:m}),D={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},z=[{maxCol:Math.ceil(g/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let E=2;if(u>0)for(T=0;T<u;T++)z.push({maxCol:Math.ceil(g/E/o)-1,maxRow:Math.ceil(x/E/l)-1,minCol:0,minRow:0}),E*=2;const H=e.mdInfo;return{storageInfo:D,rasterInfo:new W.Z({width:g,height:x,pixelType:n,bandCount:r,extent:p,nativeExtent:I,transform:v,spatialReference:m,pixelSize:y,keyProperties:w,statistics:f,histograms:s,multidimensionalInfo:H,colormap:_,storageInfo:new q.Z({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:C,tileInfo:B,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:z})})}}_parseTransform(e){var t,i;if(!(0,ne.j)(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const n=(0,ne.c)(e);if("identity"===n.type)return null;if("polynomial"!==n.type||null==(t=n.forwardCoefficients)||!t.length||null==(i=n.inverseCoefficients)||!i.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Promise.all([t,i]);let r;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":se.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&n[1]&&(r=ie.parse(n[1]).recordSet),re.default.fromJSON(r)}_buildCacheFilePath(e,t,i,n){const r=this.storageInfo.packetSize,s=Math.floor(t/r)*r,a=Math.floor(i/r)*r,l="R"+this._toHexString4(s)+"C"+this._toHexString4(a);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=null==n?void 0:n[0];if(!(0,o.pC)(u)||!f)return`${this.url}/_alllayers/${c}/${l}.bundle`;let h=u.variables.filter((e=>e.name===f.variableName))[0].dimensions[0].values.indexOf(f.values[0]).toString(16);const d=4-h.length;for(let e=0;e<d;e++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${f.variableName}/${h}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,r=0;for(n=0;n<5;n++)r|=(255&i[n])<<8*n;const s=0xffffffffff&r;for(r=0,n=5;n<8;n++)r|=(255&i[n])<<8*(n-5);return{position:s,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,n._)([(0,u.Cb)({readOnly:!0})],ae.prototype,"storageInfo",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ae.prototype,"datasetFormat",void 0),ae=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.CloudRaster")],ae);const oe=ae;let le=class extends Q{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:n,histograms:r,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:f}=i,h=this.data.extent||new F.Z({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new O.Z({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,m={x:h.width/c,y:h.height/u},p=new W.Z({width:c,height:u,pixelType:f,extent:h,nativeExtent:o,transform:l,pixelSize:m,spatialReference:h.spatialReference,bandCount:3,keyProperties:a||{},statistics:n,isPseudoSpatialReference:d,histograms:r});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,i,n={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Promise.resolve((0,V.Vl)(e,t,n)),s=(0,o.pC)(this.rasterInfo.statistics),l=(0,o.pC)(this.rasterInfo.histograms),u=s&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,V.Hv)(e)),f=await(0,c.as)([r,u]);if(!f[0].value&&f[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");var h,d;this._pixelBlockTiles=f[0].value,s||(this.rasterInfo.statistics=null==(h=f[1].value)?void 0:h.statistics),l&&(this.rasterInfo.histograms=null==(d=f[1].value)?void 0:d.histograms)}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],le.prototype,"data",void 0),le=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],le);const ce=le;function ue(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const r=ue(e,i);for(let e=0;e<r.length;e++)ue(r[e],t).forEach((e=>n.push(e)));return n}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let e=0;e<r.length;e++)n.push(r[e]||r.item[e]);return n}function fe(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=ue(e,i);return n.length>0?t?fe(n[0],t):n[0]:null}function he(e,t=null){const i=t?fe(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function de(e,t){const i=ue(e,t),n=[];let r;for(let e=0;e<i.length;e++)r=i[e].textContent||i[e].nodeValue,r&&(r=r.trim(),""!==r&&n.push(r));return n}function me(e,t){return de(e,t).map((e=>Number(e)))}function pe(e,t){const i=he(e,t);return Number(i)}function ye(e,t){var i;const n=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),r=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===r}var ge=i(35952);function xe(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function ve(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new O.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),n=e.indexOf("PROJCS"),r=n>-1?n:e.indexOf("GEOGCS");if(-1===r)return null;const s=e.slice(r,e.lastIndexOf("]",i)+1).trim(),a=e.slice(i,e.lastIndexOf("]")).trim();t=Ie(s);const o=new O.Z(t?{wkid:t}:{wkt:s}),l=Ie(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Ie(e),new O.Z(0!==t?{wkid:t}:{wkt:e})):null}function Ie(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=i[i.length-1].split(","),r=null==(t=n[0])?void 0:t.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function we(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(ye(e,"SRS")){if(!i.spatialReference){const t=he(e);i.spatialReference=ve(t)}}else if(ye(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=fe(e,"GeodataXform"),n=ve(pe(i,"SpatialReference/WKID")||he(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=null!=(t=pe(i,"PolynomialOrder"))?t:1,s=me(i,"CoeffX/Double"),a=me(i,"CoeffY/Double"),o=me(i,"InverseCoeffX/Double"),l=me(i,"InverseCoeffY/Double"),c=xe(s,a),u=xe(o,l);return{spatialReference:n,transform:new ge.Z({spatialReference:n,polynomialOrder:r,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else ue(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=he(e)));else if(ye(e,"PAMRasterBand")){const t=function(e){var t;const i=pe(e,"NoDataValue"),n=fe(e,"Histograms/HistItem"),r=pe(n,"HistMin"),s=pe(n,"HistMax"),a=pe(n,"BucketCount"),o=null==(t=he(n,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,c,u,f;ue(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":f=i}}));const h=pe(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:r,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:h,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:f}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const n=i.rasterBands;if(n){const e=!!n[0].statistics;i.statistics=e?n.map((e=>e.statistics)):null;const t=!!n[0].histogram;i.histograms=t?n.map((e=>e.histogram)):null}return i}let be=class extends Q{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new O.Z({wkid:3857})),null!=r&&r.length&&null==n&&(n=(0,V.Oh)(r));const{width:o,height:l}=t;let c=new F.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=s?s.forwardTransform(c):c;let f=!0;if(s){const e=s.forwardCoefficients;f=e&&0===e[1]&&0===e[2],f&&(s=null,c=u)}const h=new ce({data:{extent:u,nativeExtent:c,transform:s,pixelBlock:t,statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await h.open(),this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,i,n={}){return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=(0,$.y6)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const n=(0,o.Wg)(null==e?void 0:e.signal),r=null!=(t=this.ioConfig.skipExtensions)?t:[],s=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),a=this.datasetFormat,l="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,u=r.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),f=await(0,c.as)([s,u]);if(null!=n&&n.aborted)throw(0,c.zE)();const h=we(null==(i=f[0].value)?void 0:i.data);if(!h.transform){const e=f[1].value?f[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;h.transform=6===(null==e?void 0:e.length)?new ge.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),be=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],be);const Ce=be;var _e=i(3466),Te=i(58269),Se=i(52953),Re=i(2066);let ke=class extends Q{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,!n)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=n.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=n.name.slice(n.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!(0,o.pC)(r))throw new a.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,Te.d)(n.tileInfo,n):S.Z.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=r,s=.5/r.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-n.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>n.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-n.minScale)<s))[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-u)<s)))&&(i.x=i.y=a.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const f=a.level-o.level,[h,d]=e.size,m=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&m.push({x:e.resolution,y:e.resolution})})),m.sort(((e,t)=>e.x-t.x));const p=this.computeBlockBoundary(t,h,d,e.origin,m,f),y=m.length>1?m.slice(1):null;r.storageInfo=new q.Z({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:f,tileInfo:e,blockBoundary:p}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:(0,_e.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Se.y({layer:e})}}async fetchRawTile(e,t,i,n={}){if(this._slices&&null==n.sliceId)return null;const{storageInfo:r,extent:s}=this.rasterInfo,a=r.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${i}`,l=this._slices?{sliceId:n.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:"array-buffer",signal:n.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=r.blockBoundary[e];if("jpg"!==r.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return u;const{origin:h,blockWidth:d,blockHeight:m}=r,{x:p,y}=this.getPyramidPixelSize(e),g=Math.round((s.xmin-h.x)/p)%d,x=Math.round((s.xmax-h.x)/p)%d,v=Math.round((h.y-s.ymax)/y)%m,I=Math.round((h.y-s.ymin)/y)%m,w=i===f.minCol?g:0,b=t===f.minRow?v:0,C=i===f.maxCol?x:d,_=t===f.maxRow?I:m;return(0,V.pW)(u,{x:w,y:b},{width:C-w,height:_-b}),u}getSliceIndex(e){if(!this._slices||(0,o.Wi)(e)||0===e.length)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),r=await Promise.all([i,n]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,o.Wg)(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,n++,i=this.identifyPixelLocation(a,n,(0,o.Wg)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),r=O.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new W.Z({width:i,height:n,bandCount:3,extent:F.Z.fromJSON(t.extent),spatialReference:r,pixelSize:new Y.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>re.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),f=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),h=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,c,u,f,h]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new W.Z({width:i,height:n,bandCount:t.bandCount,extent:F.Z.fromJSON(t.extent),spatialReference:r,pixelSize:new Y.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Re.Z,e.extent=e.transform.forwardTransform(t))}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],ke.prototype,"tileType",void 0),ke=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],ke);const Me=ke;var Pe=i(34780),Fe=i(32603);const Oe=new Map;Oe.set("Int8","s8"),Oe.set("UInt8","u8"),Oe.set("Int16","s16"),Oe.set("UInt16","u16"),Oe.set("Int32","s32"),Oe.set("UInt32","u32"),Oe.set("Float32","f32"),Oe.set("Float64","f32"),Oe.set("Double64","f32");const Be=new Map;Be.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Be.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Be.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Be.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let De=class extends Q{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?(0,o.Wg)(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:s}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(r.statistics=null!=(a=t.statistics)?a:r.statistics,r.histograms=t.histograms,t.histograms&&!(0,o.pC)(r.statistics)&&(r.statistics=(0,V.Oh)(t.histograms)))}this._set("rasterInfo",r),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,f=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:d}=this.rasterInfo,m=[],p=this._getBandSegmentCount();let y=0,g=-1;for(;y<this._storageIndex.length;){g++;const e=Math.ceil(h/c/f**g)-1,t=Math.ceil(d/u/f**g)-1;y+=1*e*(1*t)*p*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,g>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=g),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:r,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:f,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const e=new Uint8Array(r*s);return new Pe.Z({width:r,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<p;g++)(!m||m.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:f[g].from,to:f[g].to},responseType:"array-buffer",signal:n.signal}));const x=await Promise.all(y),v=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),I=new Uint8Array(v);let w=0;for(g=0;g<p;g++)I.set(new Uint8Array(x[g].data),w),w+=x[g].data.byteLength;const b=Be.get(this.rasterInfo.storageInfo.compression).decoderFormat,C=await this.decodePixelBlock(I.buffer,{width:r,height:s,format:b,planes:(null==m?void 0:m.length)||c,pixelType:u});if((0,o.pC)(this.rasterInfo.noDataValue)&&"lerc"!==b&&!C.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=C.width*C.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(g=0;g<t;g++)Math.abs((C.pixels[0][g]-e)/e)>1e-6&&(i[g]=1);else for(g=0;g<t;g++)C.pixels[0][g]!==e&&(i[g]=1);C.mask=i}}let _=0,T=0;if(h!==r||d!==s){let e=C.mask;if(e)for(g=0;g<s;g++)if(T=g*r,g<d)for(_=h;_<r;_++)e[T+_]=0;else for(_=0;_<r;_++)e[T+_]=0;else for(e=new Uint8Array(r*s),C.mask=e,g=0;g<d;g++)for(T=g*r,_=0;_<h;_++)e[T+_]=1}return C}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,r,s,a;if(Fe.f){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)n[4*s+a]=i[4*s+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Be.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,f,h=0,d=0;for(f=0;f<e;f++)d=s**f,c=Math.ceil(a/n/d),u=Math.ceil(o/r/d),h+=c*u;d=s**e,c=Math.ceil(a/n/d),u=Math.ceil(o/r/d),h+=t*c+i,h*=4*l;const m=this._storageIndex.subarray(h,h+4*l);let p=0,y=0;const g=[];for(let e=0;e<l;e++)p=m[4*e+0]*2**32+m[4*e+1],y=p+m[4*e+2]*2**32+m[4*e+3],g.push({from:p,to:y});return{ranges:g,actualTileWidth:i<c-1?n:Math.ceil(a/d)-n*(c-1),actualTileHeight:t<u-1?r:Math.ceil(o/d)-r*(u-1)}}_parseHeader(e){const t=fe(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=fe(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(he(t,"Compression")||"none").toLowerCase();if(!Be.has(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=he(t,"DataType")||"UInt8",c=Oe.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const u=fe(t,"PageSize"),f=parseInt(u.getAttribute("x"),10),h=parseInt(u.getAttribute("y"),10),d=fe(t,"DataValues");let m,p;if(d&&(p=d.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map((e=>parseFloat(e))))),fe(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=fe(e,"MRF_META/GeoTags"),g=fe(y,"BoundingBox");if(null==g)throw new a.Z("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(g.getAttribute("minx")),v=parseFloat(g.getAttribute("miny")),I=parseFloat(g.getAttribute("maxx")),w=parseFloat(g.getAttribute("maxy")),b=he(y,"Projection")||"",C=he(e,"datafile"),_=he(e,"IndexFile");let T;if("LOCAL_CS[]"!==b)if(b.toLowerCase().startsWith("epsg:")){const e=Number(b.slice(5));isNaN(e)||0===e||(T=new O.Z({wkid:e}))}else T=ve(b);const S=new F.Z(x,v,I,w);S.spatialReference=T;const R=fe(e,"MRF_META/Rsets"),k=parseInt(R&&R.getAttribute("scale")||"2",10),M=new q.Z({origin:new Y.Z({x:S.xmin,y:S.ymax,spatialReference:T}),blockWidth:f,blockHeight:h,pyramidBlockWidth:f,pyramidBlockHeight:h,compression:o,pyramidScalingFactor:k}),P=new Y.Z({x:(I-x)/n,y:(w-v)/r,spatialReference:T});return{rasterInfo:new W.Z({width:n,height:r,extent:S,spatialReference:T,bandCount:s,pixelType:c,pixelSize:P,noDataValue:m,storageInfo:M}),files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",Be.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return we(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],De.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],De.prototype,"_storageIndex",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],De.prototype,"datasetFormat",void 0),De=(0,n._)([(0,m.j)("esri.layers.support.rasterIO.MRFRaster")],De);const ze=De;var Ee=i(12321),He=i(11139);const Ze=function(e,t){const i=e.get(t);return i&&i.values},Ae=function(e,t){const i=e.get(t);return i&&i.values[0]};let Ne=class extends Q{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,n;await this.init();const r=e?(0,o.Wg)(e.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:r});if(!s)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:c,isBigTiff:u}=(0,Ee.p)(s),f=[];await this.readIFDs(f,s,l,c,0,u?8:4,r);const h=(0,Ee.g)(f),{width:d,height:m,tileWidth:p,tileHeight:y,planes:g,pixelType:x,compression:v,firstPyramidLevel:I,maximumPyramidLevel:w,pyramidBlockWidth:b,pyramidBlockHeight:C,tileBoundary:_,affine:T,metadata:S}=h;let R=ve((null==(t=h.extent.spatialReference)?void 0:t.wkt)||(null==(i=h.extent.spatialReference)?void 0:i.wkid)),k=!1;null==R&&(k=!0,R=new O.Z({wkid:3857}));const M=new F.Z({...h.extent,spatialReference:R}),P=new Y.Z(M?{x:M.xmin,y:M.ymax,spatialReference:R}:{x:0,y:0}),B=new q.Z({blockWidth:p,blockHeight:y,pyramidBlockWidth:b,pyramidBlockHeight:C,compression:v,origin:P,firstPyramidLevel:I,maximumPyramidLevel:w,blockBoundary:_}),D=new Y.Z({x:(M.xmax-M.xmin)/d,y:(M.ymax-M.ymin)/m,spatialReference:R}),z=S?{BandProperties:S.bandProperties,DataType:S.dataType}:{},E=new W.Z({width:d,height:m,bandCount:g,pixelType:x,compression:v,pixelSize:D,storageInfo:B,spatialReference:R,isPseudoSpatialReference:k,keyProperties:z,extent:M,statistics:S?S.statistics:null});if(null!=T&&T.length&&(E.nativeExtent=new F.Z({xmin:-.5,ymin:.5-m,xmax:d-.5,ymax:.5,spatialReference:R}),E.transform=new ge.Z({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),E.extent=E.transform.forwardTransform(E.nativeExtent),E.pixelSize=new Y.Z({x:(M.xmax-M.xmin)/d,y:(M.ymax-M.ymin)/m,spatialReference:R}),B.origin.x=-.5,B.origin.y=.5),null==(n=this.ioConfig.skipExtensions)||!n.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var H;if(E.statistics=null!=(H=t.statistics)?H:E.statistics,E.histograms=t.histograms,t.histograms&&!(0,o.pC)(E.statistics)&&(E.statistics=(0,V.Oh)(t.histograms)),t.transform&&!T){E.transform=t.transform,E.nativeExtent=E.extent;const e=E.transform.forwardTransform(E.nativeExtent);E.pixelSize=new Y.Z({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/m,spatialReference:R}),E.extent=e}E.spatialReference||(E.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",E),this._headerInfo={littleEndian:l,isBigTiff:u,ifds:f,...h},!this._headerInfo.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){var r;if(null==(r=this._headerInfo)||!r.isSupported||this.isBlockOutside(e,t,i))return null;const s=this.getTileLocation(e,t,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),f=await Promise.all(u),h=f.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===f.length?f[0].data:new ArrayBuffer(h),m=[0],p=[0];if(f.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<f.length;t++){const n=f[t].data;e.set(new Uint8Array(n),i),m[t]=i,i+=n.byteLength,p[t]=n.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:m,sizes:p},width:y,height:g,planes:null,pixelType:null});let v,I,w;if(o!==y||l!==g){let e=x.mask;if(e)for(v=0;v<g;v++)if(w=v*y,v<l)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,v=0;v<l;v++)for(w=v*y,I=0;I<o;I++)e[w+I]=1}return x}async readIFDs(e,t,i,n,r,s=4,a){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=n+r,n=0);const o=await this.readIFD(t,i,n,r,He.Z.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-r,r,s,a)}async readIFD(e,t,i,n,r=He.Z.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,Ee.b)(e,t,i,n,r,s);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=r,n=s,i.forEach((i=>(0,Ee.c)(e,t,i,n)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const s=r[0]+"."+r[1]+"."+r[2],o=await this.readIFD(e,t,i.valueOffset+6-n,n,He.Z.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,n,He.Z.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,s=0===e?0:e-(n-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=(0,Ee.i)(a,this._headerInfo),l=Ze(a,"TILEOFFSETS");if(void 0===l)return null;const c=Ze(a,"TILEBYTECOUNTS"),{minRow:u,minCol:f,maxRow:h,maxCol:d}=r[s];if(t>h||i>d||t<u||i<f)return null;const m=Ae(a,"IMAGEWIDTH"),p=Ae(a,"IMAGELENGTH"),y=Ae(a,"TILEWIDTH"),g=Ae(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,v=x*t*(d+1)+i,I=[{from:l[v],to:l[v+x-1]+c[v+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[v+t]+c[v+t]!==l[v+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)I[e]={from:l[v+e],to:l[v+e]+c[v+e]-1}}const w=l[v],b=c[v];return null==w||null==b?null:{ranges:I,ifd:a,actualTileWidth:i===d?m%y:y,actualTileHeight:t===h?p%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return we(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],Ne.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],Ne.prototype,"_headerInfo",void 0),(0,n._)([(0,u.Cb)()],Ne.prototype,"_bufferSize",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),Ne=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Ne);const Je=Ne,Le=new Map;Le.set("CRF",{desc:"Cloud Raster Format",constructor:oe}),Le.set("MRF",{desc:"Meta Raster Format",constructor:ze}),Le.set("TIFF",{desc:"GeoTIFF",constructor:Je}),Le.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Me}),Le.set("JPG",{desc:"JPG Raster Format",constructor:Ce}),Le.set("PNG",{desc:"PNG Raster Format",constructor:Ce}),Le.set("GIF",{desc:"GIF Raster Format",constructor:Ce}),Le.set("BMP",{desc:"BMP Raster Format",constructor:Ce});var We=i(10171);let qe=class extends((0,y.h)((0,Z.M)((0,z.q)((0,E.I)((0,g.N)(D((0,A.n)((0,H.Q)((0,l.R)(p.Z)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new N.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(n){const e=n.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}const r=this.rasterInfo.dataType;if(("vector-magdir"===r||"vector-uv"===r)&&(0,o.pC)(this.rasterInfo.multidimensionalInfo)){var s;const e=null==(s=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:s.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new N.Z({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new N.Z({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=(0,s.ij)(n,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return(0,We.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Le.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(r="RasterTileServer");const s={url:t,sourceJSON:n,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(r))return o=Le.get(r).constructor,l=new o(s),await l.open({signal:e.signal}),l;if(r)throw new a.Z("rasterfactory:open","not a supported format "+r);const c=Array.from(Le.keys());let u=0;const f=function(){return r=c[u++],r?(o=Le.get(r).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>f()))):null};return f()}static register(e,t,i){Le.has(e.toUpperCase())||Le.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText),this.sourceJSON.timeInfo&&this._set("timeInfo",L.Z.fromJSON(this.sourceJSON.timeInfo))),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};(0,n._)([(0,u.Cb)({type:[f.z8],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],qe.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,h.J)(J.c)],qe.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],qe.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)(C.rn)],qe.prototype,"legendEnabled",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],qe.prototype,"isReference",void 0),(0,n._)([(0,u.Cb)({type:["show","hide"]})],qe.prototype,"listMode",void 0),(0,n._)([(0,u.Cb)()],qe.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],qe.prototype,"version",void 0),(0,n._)([(0,u.Cb)()],qe.prototype,"title",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],qe.prototype,"type",void 0),(0,n._)([(0,u.Cb)({type:["ArcGISTiledImageServiceLayer"]})],qe.prototype,"operationalLayerType",void 0),(0,n._)([(0,u.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],qe.prototype,"popupEnabled",void 0),(0,n._)([(0,u.Cb)({type:r.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],qe.prototype,"popupTemplate",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],qe.prototype,"defaultPopupTemplate",null),(0,n._)([(0,u.Cb)({readOnly:!0,type:[N.Z]})],qe.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,type:[N.Z]})],qe.prototype,"rasterFields",null),(0,n._)([(0,u.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"animated-flow"!==e.type})}}}}})],qe.prototype,"renderer",null),(0,n._)([(0,d.r)("renderer")],qe.prototype,"readRenderer",null),qe=(0,n._)([(0,m.j)("esri.layers.ImageryTileLayer")],qe);const je=qe},45389:(e,t,i)=>{i.d(t,{OE:()=>f,Gc:()=>m,Qg:()=>h,Rq:()=>l,gX:()=>d,z2:()=>c,ET:()=>u,Vx:()=>y}),i(91957);var n=i(61681),r=i(18486),s=i(53446);const a=new Map,o=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const r=this._cachedBlocks,s=e+"/"+t;if(r.has(s)){const e=r.get(s);e.ts=Date.now(),e.refCount++}else r.set(s,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this.clearTimer()}),this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(a.has(e)){const t=a.get(e);return t.push(i),t.length-1}return a.set(e,[i]),0}function u(e,t){if(a.has(e)){const i=a.get(e);i[t]=null,i.some((e=>null!=e))||a.delete(e)}}function f(e,t,i){if(!a.has(e))return null==t?o.decreaseRefCount(e,i):0;const n=a.get(e);if(null==n[t])return o.decreaseRefCount(e,i);const r=n[t].cache;if(r.has(i)){const e=r.get(i);if(e.refCount--,0===e.refCount){r.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function h(e,t,i){if(!a.has(e))return null==t?o.getBlock(e,i):null;const n=a.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return o.getBlock(e,i)}const r=n[t].cache;if(r.has(i)){const e=r.get(i);return e.refCount++,e.block}for(let e=0;e<n.length;e++)if(e!==t&&n[e]&&n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,r.set(i,t),t.block}return null}function d(e,t,i,n,r=null){if(!a.has(e))return void(null==t&&o.putBlock(e,i,n,r));const s=a.get(e);if(null==s[t])return void o.putBlock(e,i,n,r);const l={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:r};n.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),s[t].cache.set(i,l)}function m(e,t,i){if(!a.has(e))return void(null==t&&o.deleteBlock(e,i));const n=a.get(e);null!=n[t]?n[t].cache.delete(i):o.deleteBlock(e,i)}function p(e,t){if(!a.has(e))return null;const i=a.get(e);return null==i[t]?null:i[t]}function y(e,t,i,a,o,l,c=null){const u=p(e,t),f=u.extent,{cache:h,rasterInfo:d}=u;if(f&&f.xmin===i.xmin&&f.xmax===i.xmax&&f.ymin===i.ymin&&f.ymax===i.ymax)return;const m=i.clone().normalize(),{spatialReference:y,transform:g}=d,x=new Set;for(let e=0;e<m.length;e++){const t=m[e];if(t.xmax-t.xmin<=a||t.ymax-t.ymin<=a)continue;let i=(0,r.tB)(t,y,c);(0,n.pC)(g)&&(i=g.inverseTransform(i));const u=new s.Z({x:a,y:a,spatialReference:t.spatialReference});if(null==o&&!(o=(0,r.VO)(u,y,t,c)))return;const{pyramidLevel:f,pyramidResolution:h,excessiveReading:p}=(0,r.kr)(o,d,l||"closest");if(p)return;const{storageInfo:v}=d,{origin:I}=v,w={x:Math.max(0,Math.floor((i.xmin-I.x)/h.x)),y:Math.max(0,Math.floor((I.y-i.ymax)/h.y))},b=Math.ceil((i.xmax-i.xmin)/h.x-.1),C=Math.ceil((i.ymax-i.ymin)/h.y-.1),_=f>0?v.pyramidBlockWidth:v.blockWidth,T=f>0?v.pyramidBlockHeight:v.blockHeight,S=1,R=Math.max(0,Math.floor(w.x/_)-S),k=Math.max(0,Math.floor(w.y/T)-S),M=Math.floor((w.x+b-1)/_)+S,P=Math.floor((w.y+C-1)/T)+S;for(let e=k;e<=P;e++)for(let t=R;t<=M;t++)x.add(`${f}/${e}/${t}`)}h.forEach(((e,t)=>{if(!x.has(t)){const e=h.get(t);(null==e||e.isResolved||e.isRejected)&&h.delete(t)}})),u.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},12646:(e,t,i)=>{i.d(t,{Z:()=>l});var n=i(36663),r=i(49004),s=i(81977),a=(i(7753),i(39994),i(7283),i(40266));let o=class extends r.wq{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,n._)([(0,s.Cb)()],o.prototype,"affectsPixelSize",null),(0,n._)([(0,s.Cb)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,n._)([(0,a.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o);const l=o},2066:(e,t,i)=>{i.d(t,{Z:()=>c});var n=i(36663),r=i(81977),s=(i(7753),i(39994),i(7283),i(79438)),a=i(40266),o=i(12646);let l=class extends o.Z{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};(0,n._)([(0,s.J)({GCSShiftXform:"gcs-shift"})],l.prototype,"type",void 0),(0,n._)([(0,r.Cb)()],l.prototype,"tolerance",void 0),l=(0,n._)([(0,a.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],l);const c=l},35952:(e,t,i)=>{i.d(t,{Z:()=>p});var n=i(36663),r=(i(91957),i(81977)),s=(i(7753),i(39994),i(7283),i(79438)),a=i(34248),o=i(40266),l=i(39835),c=i(12646),u=i(53446),f=i(91772);function h(e,t,i){const{x:n,y:r}=t;if(i<2)return{x:e[0]+n*e[2]+r*e[4],y:e[1]+n*e[3]+r*e[5]};if(2===i){const t=n*n,i=r*r,s=n*r;return{x:e[0]+n*e[2]+r*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+n*e[3]+r*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=n*n,a=r*r,o=n*r,l=s*n,c=s*r,u=n*a,f=r*a;return{x:e[0]+n*e[2]+r*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+c*e[14]+u*e[16]+f*e[18],y:e[1]+n*e[3]+r*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+c*e[15]+u*e[17]+f*e[19]}}function d(e,t,i){const{xmin:n,ymin:r,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:a}),l.push({x:s,y:a}),l.push({x:n,y:r}),l.push({x:s,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:r+(a-r)*t/(e-1)}),l.push({x:s,y:r+(a-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(s-n)*t/e,y:r}),l.push({x:n+(s-n)*t/e,y:a})}l=l.map((t=>h(e,t,i)));const c=l.map((e=>e.x)),u=l.map((e=>e.y));return new f.Z({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let m=class extends c.Z{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const r=[];for(let e=0;e<i.length;e++)r.push(i[e]),r.push(n[e]);return r}writeForwardCoefficients(e,t,i){const n=[],r=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?n.push(e[t]):r.push(e[t]);t.coeffX=n,t.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,r,s,a]=e,o=n*a-s*r,l=s*r-n*a;return[(s*i-t*a)/o,(n*i-t*r)/l,a/o,r/l,-s/o,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const r=[];for(let e=0;e<i.length;e++)r.push(i[e]),r.push(n[e]);return r}writeInverseCoefficients(e,t,i){const n=[],r=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?n.push(e[t]):r.push(e[t]);t.inverseCoeffX=n,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new u.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new u.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.inverseCoefficients,e,this.polynomialOrder)}};(0,n._)([(0,r.Cb)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,n._)([(0,r.Cb)()],m.prototype,"forwardCoefficients",void 0),(0,n._)([(0,a.r)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,n._)([(0,l.c)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,n._)([(0,r.Cb)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,n._)([(0,a.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,n._)([(0,l.c)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,n._)([(0,r.Cb)()],m.prototype,"affectsPixelSize",null),(0,n._)([(0,s.J)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=(0,n._)([(0,o.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],m);const p=m},78586:(e,t,i)=>{i.d(t,{j:()=>d,c:()=>m});var n=i(2066),r=i(36663),s=(i(13802),i(7283),i(7753),i(39994),i(33156),i(79438)),a=i(40266),o=i(12646);let l=class extends o.Z{constructor(){super(...arguments),this.type="identity"}};(0,r._)([(0,s.J)({IdentityXform:"identity"})],l.prototype,"type",void 0),l=(0,r._)([(0,a.j)("esri.layers.support.rasterTransforms.IdentityTransform")],l);const c=l;var u=i(35952);const f={GCSShiftXform:n.Z,IdentityXform:c,PolynomialXform:u.Z},h=Object.keys(f);function d(e){const t=null==e?void 0:e.type;return!e||h.includes(t)}function m(e){if(!(null==e?void 0:e.type))return null;const t=f[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}}}]);
//# sourceMappingURL=4283.js.map