{"version":3,"file":"chunks/4473.js","mappings":"kQAIyjB,SAASA,EAAEC,EAAEC,GAAG,IAAG,QAAED,KAAI,QAAEC,GAAG,OAAO,KAAK,MAAMC,EAAE,GAAG,OAAO,QAAED,KAAKC,EAAEC,SAASF,EAAEG,WAAU,QAAEJ,KAAKE,EAAEG,MAAML,GAAGE,EAAE,IAAII,EAAE,cAAc,UAAEC,cAAcC,SAASC,WAAWC,KAAKC,sBAAqB,EAAGD,KAAKE,YAAY,KAAKF,KAAKG,iBAAiB,eAAeC,aAAaJ,KAAKK,QAAQC,IAAI,CAACN,KAAKO,MAAMC,MAAM,gBAAe,IAAKR,KAAKS,cAAcC,UAAUV,KAAKG,iBAAiB,eAAmBQ,sBAAkB,GAAGX,KAAKE,YAAY,OAAO,IAAI,IAAE,oBAAoBF,KAAKE,aAAaU,GAAGtB,EAAEC,GAAG,kBAAkBD,IAAIU,KAAKC,sBAAqB,EAAGD,KAAKa,OAAOC,YAAY,iBAAgB,IAAK,MAAMC,EAAEjB,MAAMc,GAAGtB,EAAEC,GAAGyB,EAAEhB,KAAK,MAAM,CAACiB,SAASF,EAAEE,SAAS,kBAAkB3B,IAAI0B,EAAEH,OAAOK,QAAQF,EAAEG,iBAAiB,kBAAkBH,EAAEH,OAAOC,YAAY,iBAAgB,MAAOM,wBAAwB9B,EAAEyB,GAAG,IAAKf,KAAKO,MAAMc,SAASC,WAAUtB,KAAKO,MAAMc,SAASE,WAAY,MAAM,IAAI,IAAE,2BAA2B,oFAAoF,OAAOvB,KAAKa,OAAOO,wBAAwBpB,KAAKwB,cAAclC,GAAGyB,GAAGU,MAAMnC,IAAI,MAAMC,EAAE,mBAAWD,GAAG,OAAOC,EAAEmC,SAASC,SAASrC,IAAIA,EAAEiB,MAAMP,KAAKO,MAAMjB,EAAEsC,YAAY5B,KAAKO,SAAShB,KAAKsC,uBAAuB,MAAM,IAAI/B,MAAM+B,uBAAuBC,YAAYxC,IAAIU,KAAK+B,IAAIzC,EAAE0C,aAAa1C,EAAE2C,SAASC,wBAAwB5C,GAAG,MAAMC,EAAE,GAAG4C,KAAKC,UAAUpC,KAAKO,MAAM8B,iBAAiBF,KAAKC,UAAU/C,EAAEW,KAAKO,MAAM+B,qBAAqBtC,KAAKO,MAAMgC,wBAAwB,OAAOzC,MAAMoC,wBAAwB5C,GAAGC,EAAEiD,8BAA8B,MAAMlD,EAAEU,KAAKO,OAAOkC,cAAclD,GAAGD,EAAEyB,EAAEzB,EAAEoD,OAAOC,KAAKrD,GAAGA,EAAEI,WAAWsB,GAAE,QAAE1B,EAAEsD,cAAcpD,EAAEF,EAAE+B,UAAU/B,EAAE+B,SAAS3B,UAAU,KAAKmD,EAAEvD,EAAEwD,iBAAiBxD,EAAEwD,iBAAiBpD,SAAS,KAAK,MAAM,CAACqD,KAAK,SAASL,OAAO3B,EAAE6B,aAAa5B,EAAEyB,cAAclD,EAAE8B,SAAS7B,EAAEwD,OAAOhD,KAAKO,MAAM0C,UAAUC,cAAc7D,EAAEW,KAAKO,MAAM+B,qBAAqBtC,KAAKO,MAAMgC,oBAAoBF,aAAarC,KAAKO,MAAM8B,aAAa3C,SAASyD,mBAAmBnD,KAAKC,qBAAqB6C,iBAAiBD,EAAEO,wBAAwBpD,KAAKO,MAAM6C,wBAAwBC,wBAAwBrD,KAAKO,MAAM8C,wBAAwBC,eAAetD,KAAKO,MAAM+C,eAAeC,iBAAiBjE,EAAEiE,qBAAoB,OAAE,EAAC,WAAK3D,EAAE4D,UAAU,mBAAc,IAAQ,OAAE,EAAC,QAAE,CAACC,UAAS,KAAM7D,EAAE4D,UAAU,kBAAkB,OAAM,OAAE,EAAC,WAAK5D,EAAE4D,UAAU,wBAAmB,GAAQ5D,GAAE,OAAE,EAAC,OAAE,2CAA2CA,GAAG,MAAM8D,EAAE9D","sources":["webpack://momraGisCore/./node_modules/@arcgis/core/views/2d/layers/StreamLayerView2D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Error.js\";import{isNone as r,isSome as o}from\"../../../core/maybe.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as i}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../../../rest/support/FeatureSet.js\";import a from\"./FeatureLayerView2D.js\";import{toJSONGeometryType as c}from\"./support/util.js\";function l(e,t){if(r(e)&&r(t))return null;const s={};return o(t)&&(s.geometry=t.toJSON()),o(e)&&(s.where=e),s}let p=class extends a{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus=\"disconnected\"}initialize(){this.handles.add([this.layer.watch(\"purgeOptions\",(()=>this._update()))])}destroy(){this.connectionStatus=\"disconnected\"}get connectionError(){if(this.errorString)return new t(\"stream-controller\",this.errorString)}on(e,t){\"data-received\"===e&&(this._enabledDataReceived=!0,this._proxy.enableEvent(\"data-received\",!0));const r=super.on(e,t),o=this;return{remove(){r.remove(),\"data-received\"===e&&(o._proxy.closed||o.hasEventListener(\"data-received\")||o._proxy.enableEvent(\"data-received\",!1))}}}queryLatestObservations(e,r){if(!(this.layer.timeInfo.endField||this.layer.timeInfo.startField))throw new t(\"streamlayer-no-timeField\",\"queryLatestObservation can only be used with services that define a TrackIdField\");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),r).then((e=>{const t=n.fromJSON(e);return t.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),t}))}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(l(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map((e=>e.toJSON())),o=c(e.geometryType),s=e.timeInfo&&e.timeInfo.toJSON()||null,i=e.spatialReference?e.spatialReference.toJSON():null;return{type:\"stream\",fields:r,geometryType:o,objectIdField:t,timeInfo:s,source:this.layer.parsedUrl,serviceFilter:l(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:i,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};e([s()],p.prototype,\"errorString\",void 0),e([s({readOnly:!0})],p.prototype,\"connectionError\",null),e([s()],p.prototype,\"connectionStatus\",void 0),p=e([i(\"esri.views.2d.layers.StreamLayerView2D\")],p);const d=p;export{d as default};\n"],"names":["l","e","t","s","geometry","toJSON","where","p","constructor","super","arguments","this","_enabledDataReceived","errorString","connectionStatus","initialize","handles","add","layer","watch","_update","destroy","connectionError","on","_proxy","enableEvent","r","o","remove","closed","hasEventListener","queryLatestObservations","timeInfo","endField","startField","_cleanUpQuery","then","features","forEach","sourceLayer","_createClientOptions","setProperty","set","propertyName","value","_createTileRendererHash","JSON","stringify","purgeOptions","definitionExpression","geometryDefinition","async","objectIdField","fields","map","geometryType","i","spatialReference","type","source","parsedUrl","serviceFilter","enableDataReceived","maxReconnectionAttempts","maxReconnectionInterval","updateInterval","customParameters","prototype","readOnly","d"],"sourceRoot":""}